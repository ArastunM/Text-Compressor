memberSearchIndex = [{"p":"<Unnamed>","c":"HuffmanCompress","l":"binaryValueList"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"buildTree(int[])"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"CHARACTER_COUNT"},{"p":"<Unnamed>","c":"TreeNode","l":"child1"},{"p":"<Unnamed>","c":"TreeNode","l":"child2"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"compare(String, String)","u":"compare(java.lang.String,java.lang.String)"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"compressTextFile(TextFile)"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"convertToBinary(String)","u":"convertToBinary(java.lang.String)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"convertToString(byte[])"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"decompressBinaryToText(String, ArrayList<ArrayList<Node>>, int)","u":"decompressBinaryToText(java.lang.String,java.util.ArrayList,int)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"decompressTextFile(TextFile)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"encodedString"},{"p":"<Unnamed>","c":"TextFile","l":"filePath"},{"p":"<Unnamed>","c":"TreeNode","l":"frequency"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"genBinaryValueList(TreeNode, String, ArrayList<Node>)","u":"genBinaryValueList(TreeNode,java.lang.String,java.util.ArrayList)"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"genEncodedString(String, ArrayList<Node>)","u":"genEncodedString(java.lang.String,java.util.ArrayList)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"getBinaryValueList(TextFile)"},{"p":"<Unnamed>","c":"TreeNode","l":"getChild1()"},{"p":"<Unnamed>","c":"TreeNode","l":"getChild2()"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"getCustomPath(TextFile, String)","u":"getCustomPath(TextFile,java.lang.String)"},{"p":"<Unnamed>","c":"TextFile","l":"getFilePath()"},{"p":"<Unnamed>","c":"TreeNode","l":"getFrequency()"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"getMaxFrequency(ArrayList<Node>)","u":"getMaxFrequency(java.util.ArrayList)"},{"p":"<Unnamed>","c":"Tree","l":"getMinNode()"},{"p":"<Unnamed>","c":"Node","l":"getPointer()"},{"p":"<Unnamed>","c":"Node","l":"getValue()"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"HuffmanCompress()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"HuffmanDecompress()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"TreeNode","l":"isLeaf()"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"<Unnamed>","c":"Node","l":"Node(char, String)","u":"%3Cinit%3E(char,java.lang.String)"},{"p":"<Unnamed>","c":"Tree","l":"nodeList"},{"p":"<Unnamed>","c":"Node","l":"pointer"},{"p":"<Unnamed>","c":"TextFile","l":"readBinaryFile()"},{"p":"<Unnamed>","c":"TextFile","l":"readFile()"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"removeCount"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"setBinaryValueList(TreeNode)"},{"p":"<Unnamed>","c":"TreeNode","l":"setChild1(TreeNode)"},{"p":"<Unnamed>","c":"TreeNode","l":"setChild2(TreeNode)"},{"p":"<Unnamed>","c":"TreeNode","l":"setFrequency(int)"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"setFrequency(String)","u":"setFrequency(java.lang.String)"},{"p":"<Unnamed>","c":"Node","l":"setPointer(String)","u":"setPointer(java.lang.String)"},{"p":"<Unnamed>","c":"Node","l":"setValue(char)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"sortBinaryValueList(ArrayList<Node>)","u":"sortBinaryValueList(java.util.ArrayList)"},{"p":"<Unnamed>","c":"HuffmanCompress","l":"storeBinaryValueList(TextFile)"},{"p":"<Unnamed>","c":"TextFile","l":"TextFile(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"<Unnamed>","c":"TextFile","l":"textFileCreate(String)","u":"textFileCreate(java.lang.String)"},{"p":"<Unnamed>","c":"TextFile","l":"textFileNew(String)","u":"textFileNew(java.lang.String)"},{"p":"<Unnamed>","c":"Node","l":"toString()"},{"p":"<Unnamed>","c":"TreeNode","l":"toString()"},{"p":"<Unnamed>","c":"Tree","l":"Tree()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"TreeNode","l":"TreeNode(char, int, TreeNode, TreeNode)","u":"%3Cinit%3E(char,int,TreeNode,TreeNode)"},{"p":"<Unnamed>","c":"HuffmanDecompress","l":"UILikeness(TextFile)"},{"p":"<Unnamed>","c":"Node","l":"value"},{"p":"<Unnamed>","c":"TextFile","l":"writeBinaryFile(byte[])"},{"p":"<Unnamed>","c":"TextFile","l":"writeFile(String, boolean)","u":"writeFile(java.lang.String,boolean)"},{"p":"<Unnamed>","c":"TextFile","l":"writeListFile(ArrayList<Node>)","u":"writeListFile(java.util.ArrayList)"}];updateSearchResults();